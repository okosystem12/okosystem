# Generated by Django 3.2.16 on 2022-11-02 12:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllUsersVK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_user', models.IntegerField(blank=True, default=0, verbose_name='id пользователя')),
                ('first_name', models.TextField(blank=True, default='', verbose_name='Имя')),
                ('last_name', models.TextField(blank=True, default='', verbose_name='Фамилия')),
                ('bdate', models.TextField(blank=True, default='', verbose_name='Дата рождения')),
                ('home_town', models.TextField(blank=True, default='', verbose_name='Место рождения')),
                ('city', models.TextField(blank=True, default='', verbose_name='Место жительства')),
            ],
            options={
                'verbose_name': 'Пользователь VK',
                'verbose_name_plural': 'Пользователи VK',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, default='', max_length=200, verbose_name='Город')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200, verbose_name='Название')),
                ('data', models.CharField(default='', max_length=200, verbose_name='Набор данных')),
                ('order', models.IntegerField(default=0, verbose_name='Позиция')),
                ('view', models.BooleanField(default=True, verbose_name='Отображаемый в карточке')),
                ('viewOrder', models.IntegerField(default=0, verbose_name='Позиция в карточке')),
                ('orderable', models.BooleanField(default=True, verbose_name='Сортируемый')),
                ('searchable', models.BooleanField(default=True, verbose_name='Поиск в столбце')),
                ('fixed', models.BooleanField(default=False, verbose_name='Зафиксировать')),
                ('hide', models.BooleanField(default=False, verbose_name='Не скрываемый')),
                ('visible', models.BooleanField(default=True, verbose_name='Отображаемый (по умолчанию)')),
            ],
            options={
                'verbose_name': 'Столбец',
                'verbose_name_plural': 'Столбцы',
                'ordering': ['table', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ControlUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastName', models.CharField(db_index=True, default='', max_length=200, verbose_name='Фамилия')),
                ('firstName', models.CharField(db_index=True, default='', max_length=200, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, default='', max_length=200, verbose_name='Отчество')),
                ('lastNameT', models.CharField(blank=True, default='', max_length=200, verbose_name='Фамилия (транслит)')),
                ('firstNameT', models.CharField(blank=True, default='', max_length=200, verbose_name='Имя (транслит)')),
                ('patronymicT', models.CharField(blank=True, default='', max_length=200, verbose_name='Отчество (транслит)')),
                ('birthDay', models.IntegerField(blank=True, default=0, verbose_name='День рождения')),
                ('birthMonth', models.IntegerField(blank=True, default=0, verbose_name='Месяц рождения')),
                ('birthYear', models.IntegerField(blank=True, default=0, verbose_name='Год рождения')),
                ('schools', models.TextField(blank=True, default='', verbose_name='Школа')),
                ('universities', models.TextField(blank=True, default='', verbose_name='ВУЗ')),
                ('work', models.TextField(blank=True, default='', verbose_name='Место работы')),
                ('updatedAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата последнего обновления')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['lastName', 'firstName', 'patronymic'],
            },
        ),
        migrations.CreateModel(
            name='CorruptInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(db_index=True, default='', max_length=200, verbose_name='Значение')),
                ('info', models.TextField(blank=True, default='', verbose_name='Информация')),
                ('tech', models.BooleanField(default=False, verbose_name='Управление администратором')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
            ],
            options={
                'verbose_name': 'Ключевое слово',
                'verbose_name_plural': 'Ключевые слова',
                'ordering': ['value', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, default='', max_length=200, verbose_name='Страна')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Environments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, default='', max_length=200, unique=True)),
                ('value', models.TextField(default='')),
            ],
            options={
                'ordering': ['key', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название')),
                ('file', models.FileField(upload_to='', verbose_name='Файл')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_groups', models.IntegerField(blank=True, default=0, verbose_name='Номер сообщества')),
                ('name', models.TextField(blank=True, default='', verbose_name='Название сообщества')),
            ],
            options={
                'verbose_name': 'Сообщество',
                'verbose_name_plural': 'Сообщества',
            },
        ),
        migrations.CreateModel(
            name='Inf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, default='', verbose_name='О себе')),
                ('activities', models.TextField(blank=True, default='', verbose_name='Деятельность')),
                ('books', models.TextField(blank=True, default='', verbose_name='Любимые книги')),
                ('games', models.TextField(blank=True, default='', verbose_name='Любимые игры')),
                ('interests', models.TextField(blank=True, default='', verbose_name='Интересы')),
                ('movies', models.TextField(blank=True, default='', verbose_name='Любимые фильмы')),
                ('music', models.TextField(blank=True, default='', verbose_name='Любимая музыка')),
                ('nickname', models.TextField(blank=True, default='', verbose_name='Никнейм')),
                ('quotes', models.TextField(blank=True, default='', verbose_name='Любимые цитаты')),
                ('status', models.TextField(blank=True, default='', verbose_name='Статус пользователя')),
                ('tv', models.TextField(blank=True, default='', verbose_name='Любимые телешоу')),
            ],
            options={
                'verbose_name': 'Информация о пользователе',
                'verbose_name_plural': 'Информация о пользователях',
            },
        ),
        migrations.CreateModel(
            name='LastUpdateConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=200, verbose_name='Тип')),
                ('dateStart', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата начала')),
                ('dateEnd', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата окончания')),
            ],
            options={
                'verbose_name': 'Последнее обновление конфигурации',
                'verbose_name_plural': 'Последние обновления конфигурации',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='Photos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(blank=True, default='', verbose_name='Ссылка на фотоизображение')),
            ],
            options={
                'verbose_name': 'Фотоизображение',
                'verbose_name_plural': 'Фотоизображения',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_post', models.IntegerField(blank=True, default=0, verbose_name='Номер поста')),
                ('date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата добавления')),
                ('text', models.TextField(blank=True, default='', verbose_name='Текст поста')),
            ],
            options={
                'verbose_name': 'Пост',
                'verbose_name_plural': 'Посты',
            },
        ),
        migrations.CreateModel(
            name='Render',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=200, verbose_name='Тип')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Рендер',
                'verbose_name_plural': 'Рендеры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(default='https://vk.com/id', max_length=200, verbose_name='Префикс')),
                ('value', models.CharField(db_index=True, default='', max_length=200, verbose_name='Значение')),
                ('confirmedAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата подтверждения')),
                ('controlUser', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.controluser')),
            ],
            options={
                'verbose_name': 'Социальная сеть',
                'verbose_name_plural': 'Социальные сети',
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='StatusStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=200, unique=True, verbose_name='Тип')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название')),
                ('value', models.IntegerField(default=0, verbose_name='Значение')),
            ],
            options={
                'verbose_name': 'Этап статуса',
                'verbose_name_plural': 'Этапы статусов',
                'ordering': ['value', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, default='', max_length=200, unique=True, verbose_name='Тип')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Таблица',
                'verbose_name_plural': 'Таблицы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TokenAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokenVK', models.TextField(blank=True, default='', verbose_name='Токен администратора')),
            ],
            options={
                'verbose_name': 'Токен администратора',
                'verbose_name_plural': 'Токены администратора',
            },
        ),
        migrations.CreateModel(
            name='TokensForVkUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokenVK', models.TextField(blank=True, default='', verbose_name='Токен')),
            ],
            options={
                'verbose_name': 'Токен для обновления базы пользователей VK',
                'verbose_name_plural': 'Токены для обновления базы пользователей VK',
            },
        ),
        migrations.CreateModel(
            name='Vch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, default='', max_length=200, verbose_name='Номер ВЧ')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
            ],
            options={
                'verbose_name': 'Воинская часть',
                'verbose_name_plural': 'Воинские части',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_video', models.IntegerField(blank=True, default=0, verbose_name='Номер видеозаписи')),
                ('date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата добавления')),
                ('name', models.TextField(blank=True, default='', verbose_name='Название видеозаписи')),
                ('link', models.TextField(blank=True, default='', verbose_name='Ссылка на видеозапись')),
                ('social', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social')),
            ],
            options={
                'verbose_name': 'Видеозапись',
                'verbose_name_plural': 'Видеозаписи',
            },
        ),
        migrations.CreateModel(
            name='VideoCorrupt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmedAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата подтверждения')),
                ('corrupt', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.corruptinfo')),
                ('video', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.video')),
            ],
        ),
        migrations.CreateModel(
            name='VideoChecks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_video', models.IntegerField(blank=True, default=0, verbose_name='Номер видеозаписи')),
                ('social', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social')),
            ],
            options={
                'verbose_name': 'Проверенная видеозапись',
                'verbose_name_plural': 'Проверенные видеозаписи',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=200, verbose_name='Тип')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название')),
                ('value', models.IntegerField(default=0, verbose_name='Значение (%)')),
                ('color', models.CharField(default='', max_length=200, verbose_name='Цвет')),
                ('stage', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.statusstage', verbose_name='Этап')),
            ],
            options={
                'verbose_name': 'Статусы',
                'verbose_name_plural': 'Статусы',
                'ordering': ['stage', 'value', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, default='', max_length=200, verbose_name='Регион')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
                ('country', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.countries', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='PostsChecks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_post', models.IntegerField(blank=True, default=0, verbose_name='Номер поста')),
                ('social', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social')),
            ],
            options={
                'verbose_name': 'Проверенный пост',
                'verbose_name_plural': 'Проверенные посты',
            },
        ),
        migrations.CreateModel(
            name='PostCorrupt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmedAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата подтверждения')),
                ('corrupt', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.corruptinfo')),
                ('post', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.post')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='social',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social'),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.cities', verbose_name='Город')),
                ('country', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.countries', verbose_name='Страна')),
                ('region', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.regions', verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Место',
                'verbose_name_plural': 'Места',
                'ordering': ['country', 'region', 'city'],
            },
        ),
        migrations.CreateModel(
            name='PhotosCorrupt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmedAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата подтверждения')),
                ('corrupt', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.corruptinfo')),
                ('photo', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.photos')),
            ],
        ),
        migrations.CreateModel(
            name='PhotosChecks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(blank=True, default='', verbose_name='Ссылка на фотоизображение')),
                ('social', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social')),
            ],
            options={
                'verbose_name': 'Проверенное фотоизображение',
                'verbose_name_plural': 'Проверенные фотоизображения',
            },
        ),
        migrations.AddField(
            model_name='photos',
            name='social',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social'),
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(db_index=True, default='', max_length=200, verbose_name='Значение')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
                ('controlUser', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.controluser')),
            ],
            options={
                'verbose_name': 'Номер телефона',
                'verbose_name_plural': 'Номера телефонов',
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='PatternTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название')),
                ('table', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.table', verbose_name='Таблица')),
            ],
            options={
                'verbose_name': 'Шаблон',
                'verbose_name_plural': 'Шаблоны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PatternColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.column', verbose_name='Столбец')),
                ('pattern', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.patterntable', verbose_name='Шаблон')),
            ],
            options={
                'verbose_name': 'Шаблон Столбец',
                'verbose_name_plural': 'Шаблоны Столбцы',
            },
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(db_index=True, default='', max_length=200, verbose_name='Значение')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
                ('controlUser', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.controluser')),
            ],
            options={
                'verbose_name': 'Адрес эл.почты',
                'verbose_name_plural': 'Адреса эл.почт',
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='InfCorrupt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmedAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата подтверждения')),
                ('corrupt', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.corruptinfo')),
                ('inf', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.inf')),
            ],
        ),
        migrations.AddField(
            model_name='inf',
            name='social',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social'),
        ),
        migrations.CreateModel(
            name='GroupsCorrupt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmedAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата подтверждения')),
                ('corrupt', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.corruptinfo')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.groups')),
            ],
        ),
        migrations.CreateModel(
            name='GroupsChecks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_groups', models.IntegerField(blank=True, default=0, verbose_name='Номер сообщества')),
                ('social', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social')),
            ],
            options={
                'verbose_name': 'Проверенное сообщество',
                'verbose_name_plural': 'Проверенные сообщества',
            },
        ),
        migrations.AddField(
            model_name='groups',
            name='social',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.social'),
        ),
        migrations.CreateModel(
            name='ControlUserPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('controlUser', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.controluser')),
                ('place', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.place', verbose_name='Место')),
            ],
            options={
                'verbose_name': 'Фото сотрудника',
                'verbose_name_plural': 'Фото сотрудников',
            },
        ),
        migrations.CreateModel(
            name='ControlUserImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removeAt', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата удаления')),
                ('controlUser', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.controluser')),
                ('file', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.file')),
            ],
            options={
                'verbose_name': 'Фото сотрудника',
                'verbose_name_plural': 'Фото сотрудников',
            },
        ),
        migrations.AddField(
            model_name='controluser',
            name='birthPlace',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='birthPlace', to='Site.place', verbose_name='Место рождения'),
        ),
        migrations.AddField(
            model_name='controluser',
            name='livePlace',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='livePlace', to='Site.place', verbose_name='Место жительства'),
        ),
        migrations.AddField(
            model_name='controluser',
            name='status',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.status', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='controluser',
            name='user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='controluser',
            name='vch',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.vch', verbose_name='Место военной службы'),
        ),
        migrations.AddField(
            model_name='column',
            name='render',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.render', verbose_name='Рендер'),
        ),
        migrations.AddField(
            model_name='column',
            name='table',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.table', verbose_name='Таблица'),
        ),
        migrations.AddField(
            model_name='cities',
            name='country',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.countries', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='cities',
            name='region',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.regions', verbose_name='Регион'),
        ),
    ]
